#10)a) d)Write the Python code and Execute the program to evaluate ∫ from 0 to 1 dx/(1+x)
#using i)Simpson’s 1/3 rd rule ii)Trapezoidal Rule iii)Simpson’s 3/8 rule
from numpy import*
a=0
b=1
p=6
n=7
h=(b-a)/p
x=linspace(a,b,n)
f=(1/(1+x))
for i in range(0,n):
    print(round(f[i],ndigits=4))
TR=round((h/2)*(f[0]+2*sum(f[1:n-1])+f[n-1]),ndigits=4)
S13=round((h/3)*((f[0]+f[n-1])+4*sum(f[1:n-1:2]) +2*sum(f[2:n-1:2])),ndigits=4)
S38=round((3*h/8)*((f[0]+f[n-1])+2*sum(f[3:n-2:3]) +3*sum(f[1:n:3]+(f[2:n-1:3]))),ndigits=4)
print("The required integral by Trapezoidal Rule is",TR)
print("The required integral by Simpson’s 1/3 Rule is",S13)
print("The required integral by Simpson’s 3/8 Rule is :",S38)

#10)b)Write the Python code and Execute the program to find gradient x^2y+z
from sympy.vector import*
from sympy import symbols
N=CoordSys3D('')
f=N.x**2*(N.y)+(N.z)
print("\n The Given scalar point function is\n")
display(f)
delop=Del()
display(delop(f))
gradf=gradient(f)
print("\n Gradient of {f} is \n")
display(gradf)
